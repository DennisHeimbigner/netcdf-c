#!/bin/bash

#NB=1
#DB=1
#X=-x

#ANSI=1
#MEM=1
LOG=1
FAST=1
#PROF=1
#BENCH=1
#UNDEF=1

#HDF5=1
#NCZARR=1
#DAP=1
#S3=1
#S3I=1
#S3TEST=yes
#S3TEST=public
#SZIP=1
#HDF4=1
#PNETCDF=1
#PAR4=1
#XML2=1
BYTES=1
#NOTHREADS=1
NOFILTER=1
#NONETWORK=1
STATICLIB=1

#TESTSERVERS="192.168.56.1:8083,remotetest.unidata.ucar.edu"
#TESTSERVERS="remotetest.unidata.ucar.edu"

if test $# != 0 ; then
cmds=$@
fi

if test "x$PNETCDF" = x1 -o "x$PAR4" = x1 ; then
MPIO=1
fi

CFLAGS=""
#CFLAGS="-Wall -Wno-unused-but-set-variable -Wno-unused-variable -Wno-unused-parameter -Wconversion ${CFLAGS}"
#CFLAGS="-Wall -Wno-unused-but-set-variable -Wno-unused-variable -Wno-unused-parameter -Wno-char-subscripts -Wno-pointer-sign -Wno-format ${CFLAGS}"
CFLAGS="-Wall -Wno-unused-parameter -Wno-char-subscripts -Wno-pointer-sign ${CFLAGS}"
#CFLAGS="-Wall ${CFLAGS}"
CFLAGS="$CFLAGS -Wsign-conversion -Wsign-compare"
#CFLAGS="-Wall -Wunused-parameter -Wno-char-subscripts -Wno-pointer-sign ${CFLAGS}"

if test "x$MEM" = x1 ; then
#    CFLAGS="$CFLAGS -O0 -ggdb -fsanitize=address -fno-omit-frame-pointer -static-libasan -static-libgcc -lrt"
    CFLAGS="$CFLAGS -O0 -ggdb -fsanitize=address -fno-omit-frame-pointer"
fi

if test "x$ANSI" = x1 ; then
CFLAGS="-ansi ${CFLAGS}"
fi

stddir="/usr/local"
PREFIX="/tmp/netcdf-c"
DESTDIR=/tmp/netcdf-c
PLUGINDIR="/tmp/plugins"

if test "x${cmds}" = x ; then
  cmds=""
else
for f in $cmds ; do
  if test "x$f" = "xdistcheck" ; then
    PREFIX=/tmp/$HOST
  fi
done
fi

# HDF4=>HDF5
if test "x$HDF4" = x1 ; then
HDF5=1
fi

# !HDF5=>!SZIP
if test "x$HDF5" = x ; then
SZIP=0
fi

CC=gcc

MALLOC_CHECK=""

CPPFLAGS=""
LDFLAGS="-L/usr/lib -L${stddir}/lib"
#LDFLAGS="-L/usr/lib"
#LD_LIBRARY_PATH="/usr/lib:${stddir}/lib:$LD_LIBRARY_PATH"

CFLAGS="-g -O0 $CFLAGS -Wl,--no-undefined"
CXXFLAGS="$CFLAGS"

MAKE=make
IGNORE="test 0 = 1"

FLAGS="--prefix ${PREFIX}"

if test "x$STATICLIB" = x1 ; then
FLAGS="$FLAGS --disable-shared"
FLAGS="$FLAGS --enable-static"
else
FLAGS="$FLAGS --disable-static"
FLAGS="$FLAGS --enable-shared"
fi

if test "x$NOTHREADS" = x1 ; then
FLAGS="$FLAGS --disable-threadsafe"
else
FLAGS="$FLAGS --enable-threadsafe"
fi

if test "x$HDF5" != x ; then
CPPFLAGS="$CPPFLAGS -I${stddir}/include $CPPFLAGS"
LDFLAGS="-lhdf5_hl -lhdf5 -lz $LDFLAGS"
FLAGS="$FLAGS --enable-hdf5"
else
#FLAGS="$FLAGS --disable-netcdf-4"
FLAGS="$FLAGS --disable-hdf5"
fi

if test "x$HDF4" = x1 ; then
FLAGS="$FLAGS --enable-hdf4 --enable-hdf4-file-tests"
fi

if test "x$DAP" = "x" ; then
FLAGS="$FLAGS --disable-dap"
else
FLAGS="$FLAGS --enable-dap"
#FLAGS="$FLAGS --enable-dap-remote-tests"
fi

if test "x$MPIO" = x1 ; then
#  MPIDIR=/usr/lib64/mpich
  MPIDIR=/usr/lib64/openmpi
  PATH="${PATH}:${MPIDIR}/bin"
  CC="${MPIDIR}/bin/mpicc"
  CPPFLAGS="-I${MPIDIR}/include"
  LDFLAGS="$LDFLAGS -L${MPIDIR}"
  LDLIBS="-lmpich"
  FLAGS="$FLAGS --enable-parallel-tests"
fi

if test "x$PNETCDF" = x1 ; then
  FLAGS="$FLAGS --enable-pnetcdf"
fi

if test "x$NCZARR" != "x" ; then
FLAGS="$FLAGS --enable-nczarr"
fi

if test "x$S3" != x ; then
  FLAGS="$FLAGS --enable-s3"
  if test "x$S3I" != x ; then
  FLAGS="$FLAGS --enable-s3-internal"
  else
  # => AWS
  LDFLAGS="$LDFLAGS -laws-cpp-sdk-s3 -laws-cpp-sdk-core -laws-cpp-sdk-transfer"
  fi
  case "$S3TEST" in
  yes*|YES*) FLAGS="$FLAGS --with-s3-testing=yes" ;;
  no*|NO*) FLAGS="$FLAGS --with-s3-testing=no" ;;
  public*|PUBLIC*) FLAGS="$FLAGS --with-s3-testing=public" ;;
  default*) FLAGS="$FLAGS --with-s3-testing" ;;
  none*) FLAGS="$FLAGS --without-s3-testing" ;;
  esac
else
  FLAGS="$FLAGS --disable-s3"
fi

if test "x$NCZARR" != x && test "x$S3" != x ; then
FLAGS="$FLAGS --enable-s3"
fi

if test "x$XML2" = "x" ; then
FLAGS="$FLAGS --disable-libxml2"
fi

if test "x${LOG}" = x1 ; then
FLAGS="$FLAGS --enable-logging"
fi

if test "x${PROF}" = x1 ; then
CFLAGS="${CFLAGS} -pg"
LDFLAGS="${LDFLAGS} -pg"
fi

if test "x${BENCH}" = x1 ; then
FLAGS="$FLAGS --enable-benchmarks"
fi

if test "x${UNDEF}" = x1 ; then
    CFLAGS="${CFLAGS} -O3 -fsanitize=undefined"
fi

if test "x${NOFILTER}" = x1 ; then
#FLAGS="$FLAGS --disable-filter-testing"
FLAGS="$FLAGS --disable-nczarr-filters"
fi

if test "x${BYTES}" = x1 ; then
    FLAGS="$FLAGS --enable-byterange"
else
    FLAGS="$FLAGS --disable-byterange"
fi

if test "x${NONETWORK}" = x1 ; then
FLAGS="$FLAGS --disable-network-access"
fi

#FLAGS="$FLAGS --disable-plugins"
#FLAGS="$FLAGS --enable-erange-fill"
#FLAGS="$FLAGS --enable-doxygen --enable-internal-docs"
FLAGS="$FLAGS --enable-external-server-tests"
#FLAGS="$FLAGS --with-ncproperties-extra=key1=value1|key2=value2"
FLAGS="$FLAGS --with-plugin-dir=${PLUGINDIR}"
#FLAGS="$FLAGS --without-plugin-dir"

export PATH
export CC
#export CPPFLAGS
export CFLAGS
export LDFLAGS
export LD_LIBRARY_PATH
export MALLOC_CHECK
export CXXFLAGS

DISTCHECK_CONFIGURE_FLAGS="$FLAGS"
export DISTCHECK_CONFIGURE_FLAGS

if test "x$NB" != x1 && test "x$FAST" != x1 ; then
${MAKE} distclean >/dev/null 2>&1
fi
if test "x$NB" != x1 ; then
  if ! fgrep '_AC_FINALIZE' acinclude.m4 ; then
    echo 'AC_DEFUN([_AC_FINALIZE],[])' >> acinclude.m4
  fi
  if autoreconf -i --force ; then ok=1; else exit ; fi
fi

sh $X ./configure ${FLAGS}
for c in $cmds; do
  ${MAKE} ${FORCE} $c
done
exit 0
